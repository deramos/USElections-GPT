version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "9000:9000"
    command: [ "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "9000" , "--workers", "2", "--reload"]
    networks:
      - app-network
    volumes:
      - ./:/app
      - api_data:/var/api-data
    depends_on:
      - scrapyd
    env_file:
      - .env

  scrapyd:
    build:
      context: .
      dockerfile: scraper/Dockerfile
    networks:
      - app-network
    ports:
      - "6800:6800"
    command: >
      sh -c "scrapyd & logparser"

  scrapyd-web:
    build:
      context: .
      dockerfile: scraper/Dockerfile
    networks:
      - app-network
    ports:
      - "5000:5000"
    command: >
      sh -c "scrapyd-deploy & scrapydweb"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "8501:8501"
    command: >
      sh -c "streamlit run frontend/view.py"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/var/cache
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always

networks:
  app-network:
    driver:  bridge

volumes:
  api_data:
  redis_data:
