version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: [ "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8080" , "--workers", "2", "--reload"]
    networks:
      - app-network
    volumes:
      - ./:/app
      - api_data:/var/api-data
    depends_on:
      - scrapyd
      - redis
      - kafka
      - vectordb
      - mongodb
    env_file:
      - .env
  scrapyd:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "6800:6800"
      - "5000:5000"
    command: /usr/bin/supervisord -c /app/scrapyd-supervisor.conf
    networks:
      - app-network
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/var/cache
    env_file:
      - .env
  kafka:
    image: docker.io/bitnami/kafka:3.7
    restart: always
    ports:
      - "9092:9092"
    networks:
      - app-network
    volumes:
      - kafka_data:/var/kafka
    env_file:
      - .env
  vectordb:
    image: chromadb/chroma:0.4.25.dev93
    restart: always
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - vectordb:/var/chromadb
  mongodb:
    image: mongo:7.0.7
    restart: always
    networks:
      - app-network
    env_file:
      - .env
    volumes:
      - mongodb_data:/var/mongodb

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - app-network
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    env_file:
      - .env

#  airflow:
#    image: apache/airflow:slim-2.9.0b2-python3.9
#    restart: always
#    networks:
#      - app-network
#    env_file:
#      - .env


networks:
  app-network:
    driver:  bridge

volumes:
  api_data:
  redis_data:
  kafka_data:
  vectordb:
  mongodb_data:
